a) First an example is given to explain the different fields.
b) Next is the list of categories used in Hindi and the list of features that 
appear with each category and their order in the output.
c) Next is the description of feature values and what do they stand for.
d) Next is the list of paradigms used for different cateories.
e) An example for spelling variation module output.

In Brief:
The morph output has following fields:
Start marker 
root
paradigm
category
features
end marker

If a word is not analysed, then machine appends <ajFAwa> to the word.
----------------------------------------------------------------------
a) Given word: usane
Morph analysis: MO_¤1_vaha{vaha P any s 1 *ne* ne }/_MO 

Explanation about Notation:
--------------------------
Analysis start marker: MO_¤1_
Analysis end marker: _MO
Multiple Analyis Seperator: /

vaha{vaha P any s 1 *ne* ne } 
 |    |   
 |    |   
root paradigm

vaha{vaha P any s 1 *ne* ne } 
          |   
          |  
         Category
vaha{vaha P any s 1 *ne* ne } 
             |   
             |  
           Gender
vaha{vaha P any s 1 *ne* ne } 
                |   
                |  
            Number
vaha{vaha P any s 1 *ne* ne } 
                  |   
                  |  
                Case
vaha{vaha P any s 1 *ne* ne } 
                     |   
                     |  
                   Parsarg
Note: By mistake the last 'ne' is repeated.
This mistake is there everywhere.
I'll fix it next release.

b) Different categories, corresponding features & their order in the output.

Category: verb
Symbol used: v
Features in the order:
	tam
	gender
	number
	person

Category: noun
Symbol used: n
Features in the order:
	gender
	number
	case

Category: Pronoun
Symbol used: P
Features in the order:
	gender
	number
	case
        parsarg

Category: Parsarg
Symbol used: p
Features in the order: No features

Category: Adjective
Symbol used: adj
Features in the order:
	gender
	number
	case

Category: Indeclinable
Symbol used: avy
Features in the order: No features

Category: Adverb
Symbol used: D
Features in the order: No features

I'll mail about sh_P in my next mail.
Category 'sh_n' is used for the 3 words 'kA' 'kI' & 'ke'.


c) Now coming back to the feature values & what do they stand for.
For Nouns and adjectives :
gender : m (male)
	 f (female)
number : s (singular)
         p (plural)
case   : 0 (direct) (i.e. parsarg does not follow such a word, e.g. ladakA)
         1 (oblique) (i.e. a parsarg will definitely follow this word 
                      e.g. ladakoM)

For Verbs:
tam:	yA/wA/nA/future/subj/kara/0/WA/hE
	(in case of jA, for jAyA, tam is 'yA' & for gayA 'yA1')
gender : m (male)
         f (female)
number: s (singular)
        p (plural)
person: u (uttam :1st person)
        m (madhyam : 2nd person)
        m_h (madhyam honorofic : 2nd person)
        a (anya : 3rd person)
       

For Pronouns:
gender : m (male)
	 f (female)
number : s (singular)
         p (plural)
case   : 0 (direct) (i.e. parsarg does not follow such a word, e.g. ladakA)
         1 (oblique) (i.e. a parsarg will definitely follow this word 
                      e.g. ladakoM)
parsarg : para
          meM
          se
          ko
          ne
          0
d) Paradigm list for different categories:

femimine nouns:
--------------
rAwa
BIda
ASA
gudiyA
IrRyA
Apawwi
AjAxi
SAnwi
ladakI
qwu
vAyu
bahU
bAlU
lO
sarasoM
mAz

masculine nouns:
---------------
Gara
Karca
kroXa
ladakA
rAjA
lohA
xiXAwA
kavi
AxamI
pAnI
Sawru
katu
AlU
lahU
kuAz
redio
gehUz
BARAvix

Adjectives:
----------
kAlI
kAlA
aneka
amIra
bAlikA
bAlaka

Adverbs:
-------
aba

Verbs:
------
KA
kara
le
ho
pI
CU
uTa
so
hE(defective verb)
WA(defective verb)


In addition to this morph there is another layer to account for the
variations in written spellings in Hindi. All these programs are put 
in morph_SV directory.
The convention used there in the output is:

After the start marker, rule number is appended and then follows the spelling
used for morph analysis followed by the morph analysis of the word with new 
spelling.
e.g. in case of 'badZI' spelling is changed internally to 'badI' and then 
badI is analysed.

final output being:
MO_¤RL 1: badI:1_badI{kAlI adj f any any }/_MO 
